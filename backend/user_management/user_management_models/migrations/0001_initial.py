# Generated by Django 5.2.6 on 2025-09-04 19:48

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import user_management.user_management_models.user_models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('secondary_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('birth_date', models.CharField(max_length=10)),
                ('pri_or_military_nbr', models.CharField(blank=True, max_length=9, null=True)),
                ('last_password_change', models.DateField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', user_management.user_management_models.user_models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CustomPermissions',
            fields=[
                ('permission_id', models.AutoField(primary_key=True, serialize=False)),
                ('en_name', models.CharField(default='default', max_length=75)),
                ('fr_name', models.CharField(default='default', max_length=75)),
                ('en_description', models.CharField(max_length=255)),
                ('fr_description', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=25, unique=True)),
                ('date_assigned', models.DateTimeField(auto_now_add=True)),
                ('expiry_date', models.DateTimeField(blank=True, null=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name_plural': 'Permissions',
            },
        ),
        migrations.CreateModel(
            name='CustomUserPermissions',
            fields=[
                ('user_permission_id', models.AutoField(primary_key=True, serialize=False)),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='user_management_models.custompermissions')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, to_field='username')),
            ],
            options={
                'verbose_name_plural': 'User Permissions',
            },
        ),
        migrations.AddConstraint(
            model_name='custompermissions',
            constraint=models.UniqueConstraint(fields=('codename',), name='must_be_a_unique_codename'),
        ),
        migrations.AddConstraint(
            model_name='customuserpermissions',
            constraint=models.UniqueConstraint(fields=('user', 'permission'), name='one_username_per_permission_id_instance'),
        ),
    ]
