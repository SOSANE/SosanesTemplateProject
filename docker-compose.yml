services:
  # Base de donn√©es PostgreSQL
  db:
    restart: always
    container_name: project_db
    image: postgres:14.19-alpine3.21
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=UQO123?
      - POSTGRES_DB=postgres
    ports: 
      - 5433:5432
    volumes:
        - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U appuser -d appdb"]
      interval: 10s
      timeout: 5s
      retries: 5
  # Backend Django
  backend:
    container_name: project_backend
    build: ./backend
    volumes:
      - ./backend/:/backend
    working_dir: /backend
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - 8000:8000
  # Frontend React
  frontend:
    container_name: project_frontend
    volumes:
      - ./frontend:/home/node
    build: ./frontend
    working_dir: /home/node
  # Nginx reverse proxy
  nginx:
    container_name: project_nginx
    build: ./nginx
    volumes:
      - ./nginx/nginx-proxy.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend
      - frontend
    ports:
      - 5173:8080
  # Redis pour cache et sessions
  redis:
    container_name: project_redis
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

volumes:
  postgres_data:
  redis_data: